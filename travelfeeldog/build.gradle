plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'woowahangongdol'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation group: 'jakarta.ws.rs', name: 'jakarta.ws.rs-api', version: '3.0.0-M1'

    /**jwt */
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    /**auth */
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'com.google.api-client:google-api-client:1.30.10'

    /**test */
    implementation group: 'org.jeasy', name: 'easy-random-core', version: '5.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit-junit5:1.1.0'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    /**DB */
    runtimeOnly 'com.mysql:mysql-connector-j'

    /**Redis*/
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    /**Cloud */
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    /**Docs */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    /** metric */
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Common
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    runtimeOnly("org.springframework.boot:spring-boot-properties-migrator")
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform {
        excludeTags 'BulkDataTest'
    }
    maxHeapSize = "1650m"

    testLogging {
        events 'passed', 'skipped', 'failed'
        showStandardStreams = true
        exceptionFormat = 'full'
        outputs.upToDateWhen { false }
    }
}


bootJar {
    archiveFileName = "TravelFeelDog.jar"
}
